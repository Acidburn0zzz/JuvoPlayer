{"version":3,"sources":["init.js"],"names":["DEFAULT_DEPENDENCIES","react","DEFAULT_DEV_DEPENDENCIES","module","exports","appPath","appName","verbose","cwd","ownPackageName","require","name","ownPath","join","useYarn","npmVersion","sync","stdout","toString","trim","startsWith","console","log","yellow","process","exit","readmeExists","appPackagePath","JSON","readFile","appPackage","parse","main","scripts","server","test","package","bundle","launch","jest","config","dependencies","devDependencies","writeFile","copy","rename","code","data","appendFile","unlink","command","args","push","proc","stdio","on","error","cdpath","resolve","tempArray","forEach","replaceName","file","src","dst","readFileSync","result","replace","hashVal","randomCode","writeFileSync","str","arr","i","pos","Math","round","random","length","csFile","newName","err"],"mappings":"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","file":"init.js","sourcesContent":["// @flow\n\nimport chalk from 'chalk';\nimport fse from 'fs-extra';\nimport path from 'path';\nimport pathExists from 'path-exists';\nimport spawn from 'cross-spawn';\nimport log from './util/log';\n\nconst DEFAULT_DEPENDENCIES = {\n    react: '15.4.2',\n    'react-native': '0.42.3',\n    'react-native-tizen-dotnet': '>=0.1.1',\n    //for debug\n    //'react-native-tizen': 'file:/Users/admin/Documents/reactDotNative/Github/rn-tizen-netcore-app/react-native-tizen/',\n};\n\nconst DEFAULT_DEV_DEPENDENCIES = {\n    'babel-jest': '20.0.3',\n    'babel-preset-react-native': '2.1.0',\n    'jest': '20.0.4',\n    'react-test-renderer': '15.4.2'\n};\n\nmodule.exports = async(appPath: string, appName: string, verbose: boolean, cwd: string = ' ') => {\n        const ownPackageName: string = require('../package.json').name;\n        const ownPath: string = path.join(appPath, 'node_modules', ownPackageName);\n        const useYarn: boolean = await pathExists(path.join(appPath, 'yarn.lock'));\n\n        if (!useYarn) {\n            let npmVersion = spawn.sync('npm', ['--version']).stdout.toString().trim();\n\n            if (npmVersion.startsWith('5')) {\n                console.log(chalk.yellow(`\n*******************************************************************************\nERROR: npm 5 is not supported yet\n*******************************************************************************\n\nIt looks like you're using npm 5 which was recently released.\n\nCreate React Native App doesn't work with npm 5 yet, unfortunately. We\nrecommend using npm 4 or yarn until some bugs are resolved.\n\nYou can follow the known issues with npm 5 at:\nhttps://github.com/npm/npm/issues/16991\n\n*******************************************************************************\n`));\n                process.exit(1);\n            }\n        }\n\n        const readmeExists: boolean = await pathExists(path.join(appPath, 'README.md'));\n        if (readmeExists) {\n            await fse.name(path.join(appPath, 'README.md'), path.join(appPath, 'README.md.bak'));\n        }\n\n        const appPackagePath: string = path.join(appPath, 'package.json');\n        const appPackage = JSON.parse(await fse.readFile(appPackagePath));\n\n        appPackage.main = 'index.js';\n        appPackage.scripts = {\n            server: 'node node_modules/react-native/local-cli/cli.js start',\n            test: 'node node_modules/jest/bin/jest.js --watch',\n            package: 'react-native-tizen package',\n            bundle: 'react-native-tizen bundle',\n            //dotnet: 'react-native-tizen dotnet',\n            launch: 'react-native-tizen launch'\n        };\n\n        appPackage.jest = {};\n        appPackage.config = {\n            \"tvip\": \"192.168.100.1\",\n            \"mode\": \"Release\"\n        };\n\n        if (!appPackage.dependencies) {\n            appPackage.dependencies = {};\n        }\n\n        if (!appPackage.devDependencies) {\n            appPackage.devDependencies = {};\n        }\n\n        Object.assign(appPackage.dependencies, DEFAULT_DEPENDENCIES);\n        Object.assign(appPackage.devDependencies, DEFAULT_DEV_DEPENDENCIES);\n\n        //npm install\n        await fse.writeFile(appPackagePath, JSON.stringify(appPackage, null, 2));\n\n        //template\n        await fse.copy(path.join(ownPath, 'template'), appPath);\n\n        //gitignore\n        try {\n            await fse.rename(path.join(appPath, 'gitignore'), path.join(appPath, '.gitignore'));\n        } catch (err) {\n            if (err.code === 'EEXIST') {\n                const data = await fse.readFile(path.join(appPath, 'gitignore'));\n                await fse.appendFile(path.join(appPath, '.gitignore'), data);\n                await fse.unlink(path.join(appPath, 'gitignore'));\n            } else {\n                throw err;\n            }\n        }\n\n        //run yarn or npm\n        let command = '';\n        let args = [];\n\n        if (useYarn) {\n            command = 'yarnpkg';\n        } else {\n            command = 'npm';\n            args = ['install', '--save'];\n\n            if (verbose) {\n                args.push('--verbose');\n            }\n        }\n\n        log(`Installing dependencies using ${command}...`);\n        log();\n\n        if (command === 'yarnpkg') {\n            command = 'yarn';\n        }\n\n        const proc = spawn(command, args, { stdio: 'inherit' });\n        proc.on('close', code => {\n                    if (code !== 0) {\n                        console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n                        return;\n                    }\n\n                    let cdpath;\n                    if (path.resolve(cwd, appName) === appPath) {\n                        cdpath = appName;\n                    } else {\n                        cdpath = appPath;\n                    }\n\n                    log(\n                        `\n            \nSuccess! Created ${appName} at ${appPath}\n            `\n                    );\n\n                    if (readmeExists) {\n                        log(\n                                `\n                \n${chalk.yellow('You had a `README.md` file, we renamed it to `README.old.md`')}`\n            );\n        }\n\n        log('Start Prepare Tizen dotnet Project....');\n\n        let tempArray = [\n            appPath + '/Tizen/tizen-manifest.xml',\n            appPath + '/index.tizen.js',\n            appPath + '/Tizen/Program.cs'\n        ];\n        tempArray.forEach(file => {\n            replaceName(file, /react_native_template/g, appName);\n        });\n\n        //Change template Name to App Name\n        function replaceName(file, src, dst) {\n            var data = fse.readFileSync(file, 'utf8');\n            let result = data.replace(src, dst);\n            //create hash code to tizen app id;\n            let hashVal = result.replace(/hash_val/g, randomCode());\n            fse.writeFileSync(file, hashVal, 'utf8');\n        }\n        \n        //return \n        function randomCode(){  \n            var str = \"\", \n                arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];  \n           \n            // generate 8 random numbers  \n            for(var i=0; i<8; i++){  \n                let pos = Math.round(Math.random() * (arr.length-1));  \n                str += arr[pos];  \n            }  \n            return str;  \n        } \n\n        //rename csproj file\n        let csFile = appPath + '/Tizen/react_native_template.csproj';\n        let newName = appPath + '/Tizen/' + appName + '.csproj';\n        fse.rename(csFile, newName, err => {\n            if (err) throw err;\n        });\n\n        log();\n        log('Happy on Tizen dotnet!');\n\n    });\n\n\n}"]}