'use strict';

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _child_process = require('child_process');

var _utlis = require('./utlis');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var llog = function llog(str) {
    return (0, _utlis._log)('Bundle', 'INFO', str);
}; // @flow

(function () {

    //let app = await preBuild();
    //const appPath = app.path;
    var packageDir = (0, _utlis.format)(_utlis.appPath + '/Tizen/shared/res');
    llog('Output Bundle Path: ' + packageDir);

    //bundle: '        --dev false'
    var RN = (0, _utlis.format)(_utlis.appPath + '/node_modules/react-native/packager/');

    replaceTizen((0, _utlis.format)(RN + 'defaults.js'), /react-native-windows/g, 'react-native-tizen-dotnet');
    replaceTizen((0, _utlis.format)(RN + 'defaults.js'), /windows/g, 'tizen');
    replaceTizen((0, _utlis.format)(RN + 'src/node-haste/lib/getPlatformExtension.js'), /web/g, 'tizen');

    function replaceTizen(file, reg, key) {
        var data = _fsExtra2.default.readFileSync(file, 'utf8');
        var result = data.replace(reg, key);
        _fsExtra2.default.writeFileSync(file, result, 'utf8');
    }

    function mode(cmd) {
        if (!cmd) {
            return false;
        }
        if (cmd.toLowerCase() === 'dev') {
            return true;
        }

        return _utlis.config.mode === 'Debug' ? 'true' : 'false';
    }
    llog('React Native will Bundle file with Platfrom: tizen');

    //make bundle comand
    var SPACE = ' ';
    var arg1 = 'node' + SPACE + (0, _utlis.format)(_utlis.appPath + '/node_modules/react-native/local-cli/cli.js') + SPACE + 'bundle --entry-file index.tizen.js';
    var arg2 = ' --bundle-output' + SPACE + (0, _utlis.format)(packageDir + '/index.tizen.bundle');
    var arg3 = ' --platform tizen --assets-dest' + SPACE + (0, _utlis.format)(packageDir + '/assets/');
    var arg4 = ' --dev ' + mode();

    (0, _child_process.execSync)(arg1 + arg2 + arg3 + arg4, { stdio: [0, 1, 2] });
})();

//module.exports = packager;